Methods
When the data stored on an object is a function we call that a method. A property is what an object has, 
while a method is what an object does.

Do object methods seem familiar? That’s because you’ve been using them all along! For example console is 
a global javascript object and .log() is a method on that object. Math is also a global javascript object 
and .floor() is a method on it.

We can include methods in our object literals by creating ordinary, comma-separated key-value pairs. 
The key serves as our method’s name, while the value is an anonymous function expression.

const alienShip = {
  invade: function () { 
    console.log('Hello! We have come to dominate your planet. Instead of Earth, it shall be called New Xaculon.')
  }
};
With the new method syntax introduced in ES6 we can omit the colon and the function keyword.

const alienShip = {
  invade () { 
    console.log('Hello! We have come to dominate your planet. Instead of Earth, it shall be called New Xaculon.')
  }
};
Object methods are invoked by appending the object’s name with the dot operator followed by the method name 
and parentheses:

alienShip.invade(); // Prints 'Hello! We have come to dominate your planet. Instead of Earth, it shall be 
called New Xaculon.'

1
Below the retreatMessage variable in the code editor, create an alienShip object. It should contain a 
method .retreat() which will console.log() the retreatMessage.
2.
Add another method to your object literal. This method, .takeOff(), should console.log() the 
string 'Spim... Borp... Glix... Blastoff!'.
3
Invoke your two methods: first .retreat() then .takeOff().
let retreatMessage = 'We no longer wish to conquer your planet. It is full of dogs, which we do not care for.';

// Write your code below
let alienShip = {
  retreat() {
    console.log(retreatMessage)
  },
  takeOff() {
    console.log('Spim... Borp... Glix... Blastoff!')
  }
};
alienShip.retreat();
alienShip.takeOff();

